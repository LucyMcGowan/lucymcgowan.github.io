llpd.loocv = -2*sum(log(unlist(to.sum.loocv)))
ploocv = neg2.llpd/-2 - llpd.loocv/-2
#for tau=infinity
AIC.sep = -2*(sum(log(dnorm(dat$y, dat$y, dat$sigma)))-8)
DIC.sep = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta.sep), dat$sigma)))-8)
DICalt.sep = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta.sep), dat$sigma)))-8)
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/nrow(samp.theta.sep)*sum(dnorm(dat$y, samp.theta.sep[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
to.sum2 = NULL
for (i in 1:nrow(dat)){
to.sum2[[i]] = log(dnorm(dat$y, samp.theta.sep[,i], dat$sigma))
}
pWAIC1.sep = (sum(to.sum)-1/nrow(samp.theta.sep)*sum(unlist(to.sum2)))
pWAIC2.sep = 8
WAIC1.sep = neg2.llpd - pWAIC1.sep
WAIC2.sep = neg2.llpd - 8
AIC
AIC.sep
DIC
DIC.sep
pDIC
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))))
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma)))
(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pDIC = (sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pDIC
pDIC.alt = (sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))))
pDIC.alt = (sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-sum(log(dnorm(dat$y, mean.bayes, dat$sigma))))
pDIC.alt
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pDIC.alt = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
DIC = -2*(sum(log(dnorm(dat$y, mean.bayes, dat$sigma)))-
pDIC)
DICalt = -2*(sum(log(dnorm(dat$y, colMeans(samp.theta), dat$sigma)))-
pDIC.alt)
DIC
DICalt
pDIC.alt
DIC.sep
DIC
pDIC.alt
pDIC
WAIC
WAIC2
pWAIC1
pWAIC2
pWAIC.sep
pWAIC1.sep
pWAIC2.sep
WAIC
pDIC
dat$y
best.prob.sep[1]
sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC2 = sum(diag(var(log(dnorm(dat$y, mean.bayes, dat$sigma)))))
pWAIC2
var(log(dnorm(dat$y, mean.bayes, dat$sigma)
)
)
pWAIC2 = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC1
pWAIC2
pWAIC1 = (sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
2*
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
pWAIC1 = 2*(sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
pWAIC1 = (sum(to.sum) - 1/grid.size*sum(log(dnorm(dat$y, samp.theta, dat$sigma))))
pWAIC1
pWAIC2 = sum(diag(var(log(dnorm(dat$y, samp.theta, dat$sigma)))))
pWAIC2
pWAIC2/2
to.sum = NULL
for (i in 1:nrow(dat)){
var.sum[[i]] = diag(var(log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))))
}
var(log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)
)
)
)
diag(var(log(dnorm(dat$y, samp.theta[,i], dat$sigma))))
var(log(dnorm(dat$y, samp.theta[,i], dat$sigma)))
var.sum = NULL
for (i in 1:nrow(dat)){
var.sum[[i]] = var(log(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
pWAIC2 = sum(var.sum)
pWAIC2
WAIC
pWAIC1.sep/2
pWAIC2.sep/2
pWAIC2
pWAIC1
pWAIC2/2
neg2.llpd
WAIC
WAIC = neg2.llpd + pWAIC1
WAIC
WAIC2 = neg2.llpd + pWAIC2
WAIC2
pWAIC2 = sum(var.sum)/2
WAIC2 = neg2.llpd + pWAIC2
WAIC2
WAIC1.sep
neg2.llpd
WAIC1.sep = neg2.llpd + pWAIC1.sep
WAIC1.sep
WAIC2.sep = neg2.llpd + 8
WAIC2.sep
llpd.loocv = -2*sum(log(to.sum.loocv))
llpd.loocv
ploocv
neg2.llpd/-2
llpd.loocv/-2
ploocv = neg2.llpd/-2 - llpd.loocv
ploocv
ploocv = neg2.llpd/-2 - llpd.loocv/2
ploocv
60.8-59.8
to.sum = NULL
for (i in 1:nrow(dat)){
to.sum[[i]] = log(1/grid.size*sum(dnorm(dat$y, samp.theta[,i], dat$sigma)))
}
neg2.llpd = sum(to.sum)*-2
neg2.llpd
ploocv = neg2.llpd - llpd.loocv
ploocv
ploocv = neg2.llpd - llpd.loocv*2
ploocv
LOOCV = neg2.llpd + ploocv
LOOCV
require(twitteR)
require(twitteR)
getTwitterOAuth("Sh6NkExwT39Q0LuF3LwZqexwg", "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea")
require(twitteR)
setup_twitter_oauth("Sh6NkExwT39Q0LuF3LwZqexwg", "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea")
require(twitteR)
setup_twitter_oauth("Sh6NkExwT39Q0LuF3LwZqexwg", "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea")
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"))
require(twitteR)
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"),
getOption("1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR"),
getOption("Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW"))
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"),
getOption("1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR"),
getOption("Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW"))
require(twitteR)
setup_twitter_oauth(getOption("Sh6NkExwT39Q0LuF3LwZqexwg"),
getOption("6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea"),
getOption("1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR"),
getOption("Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW"))
setup_twitter_oauth("Sh6NkExwT39Q0LuF3LwZqexwg",
"6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
"1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
"Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
require(base64enc)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
require(base64enc)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
require(twitteR)
require(base64enc)
require(httr)
setup_twitter_oauth(consumer_key="Sh6NkExwT39Q0LuF3LwZqexwg",
consumer_secret= "6yZVwfj2I9XiNhj56tDyudJdiQHK8JCNkNkxmFiFNJpEKdt7ea",
access_token="1851554534-4jerU2YDkt1A0wtLwR7sfTbQ14i33YlG6P7C9KR",
access_secret="Q7ASidD9ZSdOGcGYqNjLKdm5LiFeNEgg9ZyOcNRKew1OW")
source("compile_book.R",chdir=TRUE)
source("~/compile_book.R",chdir=TRUE)
whereFrom=sys.calls()[[1]]
# This should be an expression that looks something like
# source("pathname/myfilename.R")
whereFrom=as.character(whereFrom[2]) # get the pathname/filename
whereFrom=paste(getwd(),whereFrom,sep="/") # prefix it with the current working directory
pathnameIndex=gregexpr(".*/",whereFrom) # we want the string up to the final '/'
pathnameLength=attr(pathnameIndex[[1]],"match.length")
whereFrom=substr(whereFrom,1,pathnameLength-1)
print(whereFrom
)
rstudioapi::getActiveDocumentContext
rstudioapi::getActiveDocumentContext()
rstudioapi::getActiveDocumentContext()$path
dirname(rstudioapi::getActiveDocumentContext()$path)
x <- rnorm(1000,-0.5,1)
logL <- log(dnorm(x,0,1))
plot(x,logL, type="l")
plot(x,logL)
logL <- log(dnorm(x,-0.5,1))
plot(x,logL)
sort(logL)
x <- sort(rnorm(1000,-0.5,1))
logL <- log(dnorm(x,-0.5,1))
plot(x,logL)
plot(x,logL,type="l")
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(density(x)$y),lty=3)
abline(h=max(logL),lty=3)
which(x==min(abs(x))],lty=3)
abline(h=logL[
which(x==min(abs(x)))],lty=3)
which(x==min(abs(x)))
min(abs(x)
)
abline(h=logL[
which(round(x,2)==round(min(abs(x)),2))],lty=3)
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l")
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
abline(h=logL[
which(round(x,2)==round(min(abs(x)),2))],lty=3)
plot(x,logL,type="l",ylim=c(0,0))
plot(x,logL,type="l",ylim=c(-7,0))
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
abline(h=logL[
which(round(x,2)==round(min(abs(x)),2))],lty=3)
plot(x,logL,type="l",ylim=c(-5,0))
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
abline(h=logL[
which(round(x,2)==round(min(abs(x)),2))],lty=3)
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0))
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
b = logL[
which(round(x,2)==round(min(abs(x)),2))]
abline(h=b,lty=3)
chisq.test()
?chisq.test
diff(logL) [ which(abs(diff(logL))==max(abs(diff(logL))) )  ]
abline(a=0.8204*x,b=b)
diff(logL) [ which(abs(diff(logL))==0)) )  ]
diff(logL) [ which(abs(diff(logL))==0))   ]
diff(logL) [ which(abs(diff(logL))==0)   ]
diff(logL) [ which(round(abs(diff(logL)),2)==0)   ]
diff(logL) [ which(round(abs(diff(logL)),3)==0)   ]
diff(logL) [ which(round(abs(diff(logL)),4)==0)   ]
diff(logL) [ which(round(abs(diff(logL)),9)==0)   ]
diff(logL) [ which(round(abs(diff(logL)),8)==0)   ]
diff(logL) [ which(round(abs(diff(logL)),7)==0)   ]
diff(logL) [ which(round(abs(diff(logL)),6)==0)   ]
diff(logL) [ which(abs(diff(logL))==max(abs(diff(logL))) )  ]
abline(a=0.8204*x,b=b)
abline(a=0.8204*x,b=0)
abline(a=0,b=0.8204*x)
diff(logL) [ which(abs(diff(logL))==b )  ]
b
b = min(logL[
which(round(x,2)==round(min(abs(x)),2))])
diff(logL) [ which(abs(diff(logL))==b )  ]
diff(logL) [ which(round(abs(diff(logL)),2)==b )  ]
abs(diff(logL)
)
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))]
abline(a=0,b=-2.331034e-03*x)
?abline
abline(a=b,b=-2.331034e-03*x)
abline(a=10,b=-2.331034e-03*x)
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0))
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
b = min(logL[
which(round(x,2)==round(min(abs(x)),2))])
abline(h=b,lty=3)
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))]
abline(a=10,b=-2.331034e-03*x)
abline(a=1,b=-2.331034e-03*x)
abline(a=0,b=-2.331034e-03*x)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3)
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))]
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))[1]]
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n')
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3)
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))[1]]
abline(a=0,b=-2.331034e-03*x)
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F)
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3)
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))[1]]
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' )
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3)
diff(logL) [ which(round(x,2)==round(min(abs(x)),2))[1]]
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="lightblue")
abline(v=mean(x),lty=2)
abline(v=0,lty=2)
abline(h=max(logL),lty=3)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3)
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#a6cee3")
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#a6cee3")
abline(v=mean(x),lty=2, col="#1f78b4")
abline(v=0,lty=2, col="#1f78b4")
abline(h=max(logL),lty=3, col="#b2df8a")
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3, col="#b2df8a")
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#7570b3")
abline(v=mean(x),lty=2, col="#d95f02")
abline(v=0,lty=2, col="#d95f02")
abline(h=max(logL),lty=3, col="#1b9e77")
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3, col="#1b9e77")
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#7570b3")
abline(v=mean(x),lty=2, col="#d95f02")
abline(v=0,lty=2, col="#d95f02")
abline(h=max(logL),lty=3, col="#1b9e77",lwd=2)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3, col="#1b9e77",lwd=2)
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#7570b3")
abline(v=mean(x),lty=2, col="#d95f02",lwd=2)
abline(v=0,lty=2, col="#d95f02",lwd=2)
abline(h=max(logL),lty=3, col="#1b9e77",lwd=2)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3, col="#1b9e77",lwd=2)
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#a6cee3")
abline(v=mean(x),lty=2, col="#1f78b4",lwd=2)
abline(v=0,lty=2, col="#1f78b4",lwd=2)
abline(h=max(logL),lty=3, col="#b2df8a",lwd=2)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3, col="#b2df8a",lwd=2)
set.seed(7)
x <- sort(rnorm(1000,-1,1))
logL <- log(dnorm(x,-1,1))
plot(x,logL,type="l",ylim=c(-5,0),xaxt='n',yaxt='n',ann=F,bty = 'n' ,lwd=2,col="#a6cee3")
abline(v=mean(x),lty=2, col="#1f78b4",lwd=2)
abline(v=0,lty=2, col="#1f78b4",lwd=2)
abline(h=max(logL),lty=3, col="#b2df8a",lwd=3)
b = logL[
which(round(x,2)==round(min(abs(x)),2))[1]]
abline(h=b,lty=3, col="#b2df8a",lwd=3)
?z.test
??z.test
?ztest
?z.test
a<-rbinom(40,1,.5)
prop.test(a, p=0.5)
prop.test(a, p=0.5, n=50)
prop.test(a, p=0.5, n=40)
length(a)
prop.test(x=a, p=0.5, n=40)
prop.test(x=a, p=0.5)
prop.test(x=17, p=0.5)
prop.test(x=17, p=0.5, n=40)
?z.test
?TeachingDemos
install.packages("TeachingDemos")
?prop.test
prop.test(17, 30, p=.5)
prop.test(17, 30, p=.5, correct=F)
?exact
?fisher.test
a<-rbinom(40,1,0.5)
fisher.test(a)
fisher.test(18)
fisher.test((18,30))
fisher.test(c(18,30))
getHdate(support)
getHdata(support)
require(Hmisc)
getHdata(support)
require(Hmisc)
getHdata(support)
require(Hmisc)
getHdata(support2)
describe(support2)
kable(describe(support2))
require(knitr)
kable(describe(support2))
latex(describe(support2),file="")
html(describe(support2))
sessionInfo()
options(grType='plotly') # for certain graphics functions
mu <- markupSpecs$html   # markupSpecs is in Hmisc
require(devtools)
install_github(harrellfe/Hmisc)
install_github("harrellfe/Hmisc")
install_github("harrelfe/Hmisc")
install.packages("Hmisc")
install.packages("Hmisc")
require(Hmisc)
require(Hmisc)
options(grType='plotly') # for certain graphics functions
mu <- markupSpecs$html   # markupSpecs is in Hmisc
html(contents(support2), maxlevels=10, levelType='table')
html(contents(support2), maxlevels=10, levelType='table')
30290-491-197-11-19-379
30290-491-197-11-19-379-29193
30290-491-197-11-19-379-29187
1-0.24374785885577252
setwd("~/Documents/wonderland/lucymcgowan.github.io")
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
1-0.23826652963343611
1-0.25659472422062352
In [61]:
d
1-0.25659472422062352
7746/29187
29187-15049
14138/29187
29187/7889
14752/29187
83+24
14328/29187
107/29187
21396/29187
6052/29187
818/29187
288/29187
73+21+3
1-0.2296
1-0.223
1-0.232442617335
rmarkdown::render_site()
rmarkdown::render_site()
